apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: hpa-check
spec:
  crd:
    spec:
      names:
        kind: HpaCheck
      validation:
        openAPIV3Schema:
          properties:
            messageOnBlock:
              type: string
            messageOnWarning:
              type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package hpa_check

        import data.k8s.discovery

        violation[{"msg": msg, "details": details}] {
          input.review.kind.kind == "Deployment" or input.review.kind.kind == "StatefulSet"
          
          msg := "Given the application is set to scale, for higher environments you must set HPA minimum replica to be greater than 1."
          not input.review.object.metadata.name
          
          # Extract Deployment or StatefulSet name
          appName := input.review.object.metadata.name
          
          # Check if HPA exists for the application
          hpa := discovery.resources["HorizontalPodAutoscaler.v2beta2.autoscaling"].items[_]
          hpa.metadata.name == appName
          
          # Validate the minimum replicas
          minReplicas := hpa.spec.minReplicas
          minReplicas <= 1
          
          details := {
            "hpa": hpa.metadata.name,
            "minReplicas": minReplicas,
          }
        }

        warning[{"msg": msg, "details": details}] {
          input.review.kind.kind == "Deployment" or input.review.kind.kind == "StatefulSet"
          
          msg := "There is no HPA present. For higher environment usage, please consider adding one."
          not input.review.object.metadata.name
          
          # Extract Deployment or StatefulSet name
          appName := input.review.object.metadata.name
          
          # Check if HPA exists for the application
          not discovery.resources["HorizontalPodAutoscaler.v2beta2.autoscaling"].items[_].metadata.name == appName
          
          details := {
            "appName": appName,
          }
        }